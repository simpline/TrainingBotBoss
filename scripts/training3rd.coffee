# Description:
#   The 3rd week of Training - 研修3週目
#   3週目における課題は、冗長化の構成と構成自動化に関することである。
#   この時点までにスナップショットを使用して作成してる者がいたら、見上げたものである。
#
# Commands:
#   boss 11日目は何をしましょうか。
#   boss レプリケーションを設定しました。[苦労した点]
#   boss 12日目は何をしましょうか。
#   boss ApacheをAnsibleで作成してきました。[苦労した点]
#   boss 13日目は何をしましょうか。
#   boss WordpressをAnsibleで作成してきました。[苦労した点]
#   boss 14日目は何をしましょうか。
#   boss LBをAnsibleで作成してきました。[苦労した点]
#   boss 15日目は何をしましょうか。
#   boss 15日目は[実施したこと]を実施しました。[感想]
#
# Notes:
#   この内容はあえて言葉足らずにしてあるので、研修生に対してきちんとフォローすること。
#   追加で必要となるソフトウェアがあるので、必要に応じてインストールを補助すること。
#
# Author:
#   miura-simpline <miura.daisuke@simpline.co.jp>

module.exports = (robot) ->
  robot.respond /11日目は何をしましょうか。/i, (res) ->
    res.reply """
              ここからの内容は難易度が高くなるので、気合を入れて臨んでください。
              さて先週、監視をしてバックアップを取って障害があってもすぐ復旧できる状態にはしました。
              しかし、それでもサーバを作り直すのは時間がかかります。
              そこで、あらかじめ予備のサーバを用意して片方に障害があった時に切り替えるようにしておきます。
              まずは、MySQLをもう一台用意して、レプリケーションされるようにしましょう。
              終わったら、「レプリケーションを設定しました。[苦労した点]」と報告してください。
              """

  robot.respond /レプリケーションを設定しました。.*/i, (res) ->
    res.reply """
              実際に片方をダウンさせてももう片方でサイトを見れるのを確認しましたか。
              もししていなかったら、今からしてきてください。
              なお、このままだとMySQLしか冗長化させていないので、
              Web、AP部分に障害があったらブログは使えなくなります。
              そのことについては、明日続きをやりましょう。11日目はここまでです。
              """

  robot.respond /12日目は何をしましょうか。/i, (res) ->
    res.reply """
              昨日伝えたように残りの部分の冗長化を行いましょう。
              冗長化と言っても、サーバを複数用意すれば、あとはネットワークにより振り分けるだけです。
              ただ、サーバはWeb、AP、DBの3種それぞれで構築するようにしてください。
              すると、追加で4台必要になります。慣れてきたとはいえ、それなりの時間はかかるでしょう。
              そこで、先週伝えたことは覚えていますか。その答えの一つとして、構成管理ツールがあります。
              たとえば、ChefやPuppetなどです。今回はAnsibleを使ってみましょう。
              まずは新しいサーバを用意して、WordpressをAnsibleで作成してください。
              終わったら、「WordpressをAnsibleで作成してきました。[苦労した点]」と報告してください。
              """

  robot.respond /WordpressをAnsibleで作成してきました。.*/i, (res) ->
    res.reply """
              どうでしたでしょうか。時間は早くなりましたでしょうか。
              多分最初はAnsibleのフォーマットを作るので時間がかかったと思います。
              では、同じものをもう一台作った場合はどうでしょうか。
              実際にこれから作ってみてください。12日目はそれで終わりにします。
              """

  robot.respond /13日目は何をしましょうか。/i, (res) ->
    res.reply """
              DB、APと来ましたので、次はWebに取り掛かりましょう。
              ApacheをAnsibleで作成しましょう。もちろん、2台です。
              作成したら、Web、AP、DBを繋げて、正常に表示されるか確認しましょう。
              片方ずつ停止させてみて、問題ないか確認しましょう。
              終わったら、「ApacheをAnsibleで作成してきました。[苦労した点]」と報告してください。
              """

  robot.respond /ApacheをAnsibleで作成してきました。.*/i, (res) ->
    res.reply """
              これで冗長性が担保されました。
              ちなみにこれまで作成されてきたものについては、gitで管理されてますでしょうか。
              変更について逐次commitして履歴を残しましょう。
              ただ、このままでは、Webに接続する際別々のホスト名に接続する必要があると思います。
              そこで前段にロードバランサー(LB)を設置しましょう。
              これについては明日実施しましょう。13日目はこれでおしまいです。
              """

  robot.respond /14日目は何をしましょうか。/i, (res) ->
    res.reply """
              さて、LBにはハードウェアのLBもありますが、ソフトウェアのものもあります。
              今回はソフトウェアでのLBにしてください。
              実際にはLB自体の冗長性も考慮する必要がありますが、今回はなくて大丈夫です。
              最近はGoogleがHTTPSでの接続を優遇すると発表したため、
              SSLラッパーとしての機能も追加できるとなおいいです。
              もちろん、これもAnsibleで作成してください。
              終わったら、「LBをAnsibleで作成してきました。[苦労した点]」と報告してください。
              """

  robot.respond /LBをAnsibleで作成してきました。.*/i, (res) ->
    res.reply """
              これでサーバの構成としては冗長性のある堅固な構成となりました。
              実際にはさらに考慮すべきことはありますが、今は十分でしょう。
              また、構築の手間も省かれたものになっているはずです。
              同じ構成を再び作ることになっても、今ならすぐできるでしょう。
              ただ、一つ懸念点があります。これは明日説明します。
              14日目はこれでおしまいです。
              """

  robot.respond /15日目は何をしましょうか。/i, (res) ->
    res.reply """
              さて、昨日言った懸念点とはなんでしょうか。
              DB、Webと違って、Wordpressではサーバ部分は更新しなくても、
              アプリのコード部分は頻繁に更新することがあります。
              一緒に更新をかけることもできなくはないですが、
              更新する必要がない部分を更新してしまうのは余計に負荷がかかります。
              そのため、別々の方法で行う必要があります。
              この方法は考えて、実施してください。
              終わったら、「15日目は[実施したこと]を実施しました。[感想]」と報告してください。
              """

  robot.respond /15日目は.*を実施しました。.*/i, (res) ->
    res.reply """
              できましたでしょうか。
              アプリの配置については、インフラとは異なる領域で語られてきました。
              しかし、自動化を考えた時には一貫して行った方が効果が高くなります。
              そのため、自動化の考えは、どちらかといえばアプリからインフラへと浸透してきました。
              では、この環境は十分に自動化されていますでしょうか。
              実は足りない部分があります。それを来週までに考えてください。
              15日目はこれでおしまいです。
              """
